{"version":3,"file":"static/js/322.e7521a0b.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"form_title\":\"ContactForm_form_title__qzRJd\",\"form_container\":\"ContactForm_form_container__8PyHY\",\"form_label\":\"ContactForm_form_label__KFrv0\",\"form_input\":\"ContactForm_form_input__juvV+\",\"form_btn\":\"ContactForm_form_btn__ZVx04\"};","import { useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/selectors';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/operations';\nimport { nanoid } from '@reduxjs/toolkit';\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const name = form[0].value;\n    const phone = form[1].value;\n    const nameExists = contacts.some(contact => contact.name === name);\n    if (nameExists) {\n      alert(name + ' is already in contacts.');\n    } else {\n      dispatch(addContact({ name, phone }));\n    }\n    form.reset();\n  };\n\n  return (\n    <section className={css.form}>\n      <h1 className={css.form_title}>Phonebook</h1>\n      <form className={css.form_container} onSubmit={handleSubmit}>\n        <label className={css.form_label} htmlFor={nameInputId}>\n          Name\n        </label>\n        <input\n          className={css.form_input}\n          type=\"text\"\n          name=\"name\"\n          id={nameInputId}\n          pattern=\"^[a-zA-Zа-яА-Я]+((['\\s\\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <label className={css.form_label} htmlFor={numberInputId}>\n          Number\n        </label>\n        <input\n          className={css.form_input}\n          type=\"tel\"\n          name=\"number\"\n          id={numberInputId}\n          pattern=\"^\\+((?:9[679]|8[035789]|6[789]|5[90]|42|3[578]|2[1-689])|9[0-58]|8[1246]|6[0-6]|5[1-8]|4[013-9]|3[0-469]|2[70]|7|1)(?:\\W*\\d){0,13}\\d$\"\n          title=\"Phone number must start with +, be at least 3 digits and can contain spaces, dashes\"\n          required\n        />\n        <button className={css.form_btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </section>\n  );\n};\n\n// =======================================================================================\n\n// import React, { useState } from 'react';\n// import PropTypes from 'prop-types';\n// import css from './ContactForm.module.css';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { addContact } from '../../redux/contactsSlice';\n\n// export const ContactForm = () => {\n//   const [name, setName] = useState('');\n//   const [number, setNumber] = useState('');\n//   const contacts = useSelector(state => state.contacts);\n//   const dispatch = useDispatch();\n\n//   const handleSubmit = event => {\n//     event.preventDefault();\n//     const exists = contacts.some(\n//       contact => contact.name.toLowerCase().trim() === name.toLowerCase().trim()\n//     );\n//     if (exists) {\n//       alert(`${name} is already in contacts`);\n//     } else {\n//       dispatch(addContact(name, number));\n//       setName('');\n//       setNumber('');\n//     }\n//   };\n\n//   return (\n//     <section className={css.form}>\n//       <h1 className={css.form_title}>Phonebook</h1>\n//       <form className={css.form_container} onSubmit={handleSubmit}>\n//         <label className={css.form_label}>Name</label>\n//         <input\n//           type=\"text\"\n//           name=\"name\"\n//           value={name}\n//           onChange={event => setName(event.target.value)}\n//           pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//           title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//           placeholder=\"Enter name\"\n//           className={css.form_input}\n//           required\n//         />\n//         <label className={css.form_label}>Number</label>\n//         <input\n//           type=\"tel\"\n//           name=\"number\"\n//           value={number}\n//           onChange={event => setNumber(event.target.value)}\n//           pattern=\"[0-9+\\-()\\s]+\"\n//           title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//           placeholder=\"Enter phone number\"\n//           className={css.form_input}\n//           required\n//         />\n//         <button className={css.form_btn} type=\"submit\">\n//           Add contact\n//         </button>\n//       </form>\n//     </section>\n//   );\n// };\n\n// ContactForm.propTypes = {\n//   addContact: PropTypes.func.isRequired,\n// };\n\n// =======================================================================================\n\n// import { nanoid } from 'nanoid';\n// import PropTypes from 'prop-types';\n// import css from './ContactForm.module.css';\n// import { useState } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { addContact } from '../../redux/actions';\n\n// export const ContactForm = ({ addContact }) => {\n//   const [name, setName] = useState('');\n//   const [number, setNumber] = useState('');\n//   const dispatch = useDispatch();\n\n//   const handleSubmit = event => {\n//     event.preventDefault();\n//     const form = event.target;\n//     // const value = form.elements.name.value\n//     dispatch(addContact({ id: nanoid(), name, number }));\n//     form.reset();\n//   };\n\n//   return (\n//     <section className={css.form}>\n//       <h1 className={css.form_title}>Phonebook</h1>\n//       <form className={css.form_container} onSubmit={handleSubmit}>\n//         <label className={css.form_label}>Name</label>\n//         <input\n//           type=\"text\"\n//           name=\"name\"\n//           value={name}\n//           onChange={event => setName(event.target.value)}\n//           pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//           title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//           placeholder=\"Enter name\"\n//           className={css.form_input}\n//           required\n//         />\n//         <label className={css.form_label}>Number</label>\n//         <input\n//           type=\"tel\"\n//           name=\"number\"\n//           value={number}\n//           onChange={event => setNumber(event.target.value)}\n//           // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//           pattern=\"[0-9+\\-()\\s]+\"\n//           title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//           placeholder=\"Enter phone number\"\n//           className={css.form_input}\n//           required\n//         />\n//         <button className={css.form_btn} type=\"submit\">\n//           Add contact\n//         </button>\n//       </form>\n//     </section>\n//   );\n// };\n\n// ContactForm.propTypes = {\n//   addContact: PropTypes.func.isRequired,\n// };\n\n// =======================================================================================\n","// extracted by mini-css-extract-plugin\nexport default {\"filter_container\":\"Filter_filter_container__f0O5y\",\"filter_label\":\"Filter_filter_label__5ITod\",\"filter_input\":\"Filter_filter_input__eu2zm\"};","import { nanoid } from '@reduxjs/toolkit';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/filterSlice';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const filterInputId = nanoid();\n  const dispatch = useDispatch();\n\n  const handleFilter = event => {\n    const filter = event.target.value;\n    dispatch(setFilter(filter));\n  };\n\n  return (\n    <div className={css.filter_container}>\n      <label className={css.filter_label}>Find contacts by name</label>\n      <input\n        className={css.filter_input}\n        onChange={handleFilter}\n        type=\"text\"\n        name=\"filter\"\n        id={filterInputId}\n        pattern=\"^[a-zA-Zа-яА-Я]+((['\\s\\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      />\n    </div>\n  );\n};\n// =======================================================================================\n\n// import React from 'react';\n// import PropTypes from 'prop-types';\n// import css from './Filter.module.css';\n// import { useDispatch } from 'react-redux';\n// import { setFilter } from '../../redux/filterSlice';\n\n// export const Filter = ({ filter }) => {\n//   const dispatch = useDispatch();\n\n//   const handleChange = event => {\n//     dispatch(setFilter(event.target.value));\n//   };\n\n//   return (\n//     <div className={css.filter_container}>\n//       <label className={css.filter_label}>Find contacts by name</label>\n//       <input\n//         type=\"text\"\n//         name=\"filter\"\n//         value={filter}\n//         onChange={handleChange}\n//         className={css.filter_input}\n//         placeholder=\"Enter contact\"\n//       />\n//     </div>\n//   );\n// };\n\n// Filter.propTypes = {\n//   filter: PropTypes.string.isRequired,\n// };\n\n// =======================================================================================\n\n// import PropTypes from 'prop-types';\n// import css from '../Filter/Filter.module.css';\n\n// export const Filter = ({ filter, onChangeInput }) => {\n//   return (\n//     <div className={css.filter_container}>\n//       <label className={css.filter_label}>Find contacts by name </label>\n//       <input\n//         type=\"text\"\n//         name=\"filter\"\n//         value={filter}\n//         onChange={onChangeInput}\n//         className={css.filter_input}\n//         placeholder=\"Enter contact\"\n//       />\n//     </div>\n//   );\n// };\n\n// Filter.propTypes = {\n//   filter: PropTypes.string.isRequired,\n//   onChangeInput: PropTypes.func.isRequired,\n// };\n\n// =======================================================================================\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts_container\":\"ContactList_contacts_container__+x5UG\",\"contacts_list\":\"ContactList_contacts_list__jhchV\",\"title\":\"ContactList_title__gpugJ\",\"contacts_btn\":\"ContactList_contacts_btn__uvFds\",\"contacts_item\":\"ContactList_contacts_item__E-7AL\",\"contacts_name\":\"ContactList_contacts_name__gBngi\",\"contacts_number\":\"ContactList_contacts_number__nCS8r\",\"error\":\"ContactList_error__uCB2f\",\"itemContainer\":\"ContactList_itemContainer__HuKMY\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/operations';\nimport { selectVisibleContacts } from '../../redux/selectors';\nimport css from './ContactList.module.css';\n\nexport const ContactList = ({ error, contact }) => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(contact.id));\n\n  return (\n    <div>\n      {error && (\n        <p className={css.error}>Failed to fetch data from the server</p>\n      )}\n      <h2 className={css.title}>Contacts</h2>\n      <ul className={css.contacts_list}>\n        {visibleContacts.map(contact => (\n          <li className={css.contacts_item} key={contact.id}>\n            <div>\n              <p className={css.contacts_name}>{contact.name}</p>\n              <p className={css.contacts_number}>{contact.phone}</p>\n            </div>\n            <button\n              className={css.contacts_btn}\n              type=\"button\"\n              onClick={() => handleDelete()}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\n// =======================================================================================\n\n// import React from 'react';\n// import PropTypes from 'prop-types';\n// import css from './ContactList.module.css';\n// // import { useDispatch } from 'react-redux';\n// // import { deleteContact } from '../../redux/contactsSlice';\n\n// export function ContactList({ contacts, handleDelete }) {\n//   // const dispatch = useDispatch();\n\n//   return (\n//     <div className={css.contacts_container}>\n//       <h2>Contacts</h2>\n//       <ul className={css.contacts_list}>\n//         {contacts &&\n//           contacts.map((contact, id) => (\n//             <li className={css.contacts_item} key={id}>\n//               <p className={css.contacts_name}>{contact.name}</p>\n//               <p className={css.contacts_number}>{contact.number}</p>\n//               <button\n//                 type=\"button\"\n//                 className={css.contactItemBtn}\n//                 onClick={() => handleDelete(contact.id)}\n//               >\n//                 Delete\n//               </button>\n//             </li>\n//           ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// ContactList.propTypes = {\n//   contacts: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.string.isRequired,\n//       name: PropTypes.string.isRequired,\n//       number: PropTypes.string.isRequired,\n//     })\n//   ).isRequired,\n// };\n\n// =======================================================================================\n\n// import React from 'react';\n// import PropTypes from 'prop-types';\n// import css from '../ContactList/ContactList.module.css';\n\n// export function ContactList({ contacts, deleteContact }) {\n//   return (\n//     <div className={css.contacts_container}>\n//       <h2>Contacts</h2>\n//       <ul className={css.contacts_list}>\n//         {contacts.map(({ id, name, number }) => (\n//           <li className={css.contacts_item} key={id}>\n//             <p className={css.contacts_name}>{name}</p>\n//             <p className={css.contacts_number}>{number}</p>\n//             <button\n//               onClick={() => {\n//                 deleteContact(id);\n//               }}\n//               className={css.contacts_btn}\n//             >\n//               Delete\n//             </button>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// ContactList.propTypes = {\n//   contacts: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.string.isRequired,\n//       name: PropTypes.string.isRequired,\n//       number: PropTypes.string.isRequired,\n//     })\n//   ),\n//   deleteContact: PropTypes.func.isRequired,\n// };\n\n// =======================================================================================\n","// extracted by mini-css-extract-plugin\nexport default {\"app_container\":\"Contacts_app_container__DgDhB\",\"title\":\"Contacts_title__LxdN4\"};","import { useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet-async';\nimport { selectIsLoading, selectError } from '../../redux/selectors';\nimport { Loader } from '../../components/Loader/Loader';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport css from './Contacts.module.css';\n\nconst Contacts = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  return (\n    <main className={css.container}>\n      <Helmet>\n        <title className={css.title}>Contacts</title>\n      </Helmet>\n      {isLoading && !error && <Loader />}\n      <div className={css.app_container}>\n        <ContactForm />\n        <Filter />\n        <ContactList error={error} />\n      </div>\n    </main>\n  );\n};\n\nexport default Contacts;\n"],"names":["ContactForm","nameInputId","nanoid","numberInputId","dispatch","useDispatch","contacts","useSelector","selectContacts","_jsxs","className","css","children","_jsx","onSubmit","event","preventDefault","form","currentTarget","name","value","phone","some","contact","alert","addContact","reset","htmlFor","type","id","pattern","title","required","Filter","filterInputId","onChange","filter","target","setFilter","ContactList","_ref","error","visibleContacts","selectVisibleContacts","handleDelete","deleteContact","map","onClick","Contacts","isLoading","selectIsLoading","selectError","Helmet","Loader"],"sourceRoot":""}