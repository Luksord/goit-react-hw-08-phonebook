{"version":3,"file":"static/js/93.8b439555.chunk.js","mappings":"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","sources":["redux/selectors/contacts.js","redux/selectors/index.js","redux/selectors/filter.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","redux/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectContacts } from './contacts.js';\nimport { selectFilter } from './filter.js';\n\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","export const selectFilter = state => state.filter.status;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactForm_container__qpJ1N\",\"form_container\":\"ContactForm_form_container__8PyHY\",\"form\":\"ContactForm_form__dhl+T\",\"title\":\"ContactForm_title__jZguf\",\"text\":\"ContactForm_text__kqq6l\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import { useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/selectors/contacts';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/operations/contacts';\nimport { nanoid } from '@reduxjs/toolkit';\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const name = form[0].value;\n    const number = form[1].value;\n    const nameExists = contacts.some(contact => contact.name === name);\n    if (nameExists) {\n      alert(name + ' is already in contacts.');\n    } else {\n      dispatch(addContact({ name, number }));\n    }\n    form.reset();\n  };\n\n  return (\n    <section className={css.container}>\n      <h2 className={css.title}>Add contact</h2>\n      {/* <p className={css.text}>Add contact</p> */}\n      <form className={css.form} onSubmit={handleSubmit}>\n        <label className={css.label} htmlFor={nameInputId}>\n          Name\n        </label>\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          id={nameInputId}\n          pattern=\"^[a-zA-ZąĄćĆęĘłŁńŃóÓśŚźŹżŻ]+((['\\s\\-][a-zA-ZąĄćĆęĘłŁńŃóÓśŚźŹżŻ ])?[a-zA-ZąĄćĆęĘłŁńŃóÓśŚźŹżŻ]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n\n        <label className={css.label} htmlFor={numberInputId}>\n          Number\n        </label>\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          id={numberInputId}\n          pattern=\"^\\+((?:9[679]|8[035789]|6[789]|5[90]|42|3[578]|2[1-689])|9[0-58]|8[1246]|6[0-6]|5[1-8]|4[013-9]|3[0-469]|2[70]|7|1)(?:\\W*\\d){0,13}\\d$\"\n          title=\"Phone number must start with +, be at least 3 digits and can contain spaces, dashes\"\n          required\n        />\n\n        <button className={css.button} type=\"submit\">\n          Add\n        </button>\n      </form>\n    </section>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Filter_container__L5eml\",\"form_container\":\"Filter_form_container__xiGEt\",\"form\":\"Filter_form__wVnxJ\",\"title\":\"Filter_title__pSkfx\",\"text\":\"Filter_text__uqQRu\",\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\",\"button\":\"Filter_button__POEhf\"};","import { useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/slices/filterSlice';\nimport { nanoid } from '@reduxjs/toolkit';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const filterInputId = nanoid();\n  const dispatch = useDispatch();\n\n  const handleFilter = evt => {\n    const filter = evt.target.value;\n    dispatch(setFilter(filter));\n  };\n\n  return (\n    <div className={css.container}>\n      <h3 className={css.title}>Search contact</h3>\n      <label className={css.label} htmlFor={filterInputId}>\n        Find contacts by name\n      </label>\n      <input\n        className={css.input}\n        onChange={handleFilter}\n        type=\"text\"\n        name=\"filter\"\n        id={filterInputId}\n        pattern=\"^[a-zA-Zа-яА-Я]+((['\\s\\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      />\n    </div>\n  );\n};\n","import { createSelector } from '@reduxjs/toolkit';\n// import { selectContacts } from './contacts.js';\n// import { selectFilter } from './filter.js';\n\nexport const selectIsLoggedIn = state => state.auth.isLoggedIn;\nexport const selectUser = state => state.auth.user;\nexport const selectIsRefreshing = state => state.auth.isRefreshing;\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter.status;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n\n// // =======================================================================================\n\n// import { createSelector } from '@reduxjs/toolkit';\n\n// export const selectContacts = state => state.contacts.items;\n// export const selectFilter = state => state.filter.status;\n// export const selectIsLoading = state => state.contacts.isLoading;\n// export const selectError = state => state.contacts.error;\n\n// export const selectVisibleContacts = createSelector(\n//   [selectContacts, selectFilter],\n//   (contacts, filter) => {\n//     return contacts.filter(contact =>\n//       contact.name.toLowerCase().includes(filter.toLowerCase())\n//     );\n//   }\n// );\n\n// // =======================================================================================\n\n// // export const selectContacts = state => state.contactsSlice;\n\n// // export const selectFilters = state => state.filterSlice;\n\n// // export const selectIsLoading = state => state.contacts.isLoading;\n\n// // export const selectError = state => state.contacts.error;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactList_container__hYHc3\",\"item\":\"ContactList_item__EZYHO\",\"wrapper\":\"ContactList_wrapper__VP-XU\",\"name\":\"ContactList_name__UCkFW\",\"number\":\"ContactList_number__2af8f\",\"button\":\"ContactList_button__7kL4l\",\"error\":\"ContactList_error__uCB2f\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport { selectVisibleContacts } from '../../redux/selectors';\nimport { deleteContact } from '../../redux/operations/contacts';\nimport css from './ContactList.module.css';\n\nexport const ContactList = ({ error, contact }) => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(contact.id));\n\n  return (\n    <div className={css.container}>\n      {error && (\n        <p className={css.error}>Failed to fetch data from the server</p>\n      )}\n      <ul className={css.list}>\n        {visibleContacts.map(contact => (\n          <li className={css.item} key={contact.id}>\n            <div className={css.wrapper}>\n              <p className={css.name}>{contact.name}</p>\n              <p className={css.number}>{contact.number}</p>\n            </div>\n            <button\n              className={css.button}\n              type=\"button\"\n              onClick={() => handleDelete()}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nContactList.propTypes = {\n  error: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Contacts_container__WzsIr\",\"title\":\"Contacts_title__LxdN4\",\"subcontainer\":\"Contacts_subcontainer__AYtkS\"};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet-async';\nimport { selectIsLoading, selectError } from '../../redux/selectors/index';\nimport { Loader } from '../../components/Loader/Loader';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { fetchContacts } from '../../redux/operations/contacts';\nimport css from './Contacts.module.css';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <main className={css.container}>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      {isLoading && !error && <Loader />}\n      <div className={css.subcontainer}>\n        <ContactForm />\n      </div>\n      <div className={css.subcontainer}>\n        <Filter />\n      </div>\n      <ContactList error={error} />\n    </main>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","createSelector","filter","status","contact","name","toLowerCase","includes","ContactForm","nameInputId","nanoid","numberInputId","dispatch","useDispatch","useSelector","_jsxs","className","css","children","_jsx","onSubmit","event","preventDefault","form","currentTarget","value","number","some","alert","addContact","reset","htmlFor","type","id","pattern","title","required","Filter","filterInputId","onChange","evt","target","setFilter","selectVisibleContacts","ContactList","_ref","visibleContacts","handleDelete","deleteContact","map","onClick","Contacts","useEffect","fetchContacts","Helmet","Loader"],"sourceRoot":""}