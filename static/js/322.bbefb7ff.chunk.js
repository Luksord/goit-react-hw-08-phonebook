"use strict";(self.webpackChunkgoit_react_hw_08_phonebook=self.webpackChunkgoit_react_hw_08_phonebook||[]).push([[322],{322:(t,e,a)=>{a.r(e),a.d(e,{default:()=>y});var n=a(420),s=a(50),r=a(351),o=a(455),c=a(902),l=a(565);const i={form:"ContactForm_form__dhl+T",form_title:"ContactForm_form_title__qzRJd",form_container:"ContactForm_form_container__8PyHY",form_label:"ContactForm_form_label__KFrv0",form_input:"ContactForm_form_input__juvV+",form_btn:"ContactForm_form_btn__ZVx04"};var _=a(184);const m=()=>{const t=(0,l.x0)(),e=(0,l.x0)(),a=(0,n.I0)(),s=(0,n.v9)(r.Af);return(0,_.jsxs)("section",{className:i.form,children:[(0,_.jsx)("h1",{className:i.form_title,children:"Phonebook"}),(0,_.jsxs)("form",{className:i.form_container,onSubmit:t=>{t.preventDefault();const e=t.currentTarget,n=e[0].value,r=e[1].value;s.some((t=>t.name===n))?alert(n+" is already in contacts."):a((0,c.uK)({name:n,phone:r})),e.reset()},children:[(0,_.jsx)("label",{className:i.form_label,htmlFor:t,children:"Name"}),(0,_.jsx)("input",{className:i.form_input,type:"text",name:"name",id:t,pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+((['\\s\\-][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",title:"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan",required:!0}),(0,_.jsx)("label",{className:i.form_label,htmlFor:e,children:"Number"}),(0,_.jsx)("input",{className:i.form_input,type:"tel",name:"number",id:e,pattern:"^\\+((?:9[679]|8[035789]|6[789]|5[90]|42|3[578]|2[1-689])|9[0-58]|8[1246]|6[0-6]|5[1-8]|4[013-9]|3[0-469]|2[70]|7|1)(?:\\W*\\d){0,13}\\d$",title:"Phone number must start with +, be at least 3 digits and can contain spaces, dashes",required:!0}),(0,_.jsx)("button",{className:i.button,type:"submit",children:"Add contact"})]})]})};var d=a(895);const h="Filter_filter_container__f0O5y",p="Filter_filter_label__5ITod",u="Filter_filter_input__eu2zm",x=()=>{const t=(0,l.x0)(),e=(0,n.I0)();return(0,_.jsxs)("div",{className:h,children:[(0,_.jsx)("label",{className:p,children:"Find contacts by name"}),(0,_.jsx)("input",{className:u,onChange:t=>{const a=t.target.value;e((0,d.T)(a))},type:"text",name:"filter",id:t,pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+((['\\s\\-][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",title:"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan"})]})},f="ContactList_contacts_list__jhchV",b="ContactList_contacts_btn__uvFds",j="ContactList_contacts_item__E-7AL",C="ContactList_contacts_name__gBngi",N="ContactList_contacts_number__nCS8r",v="ContactList_error__uCB2f",F=t=>{let{error:e,contact:a}=t;const s=(0,n.v9)(r.hF),o=(0,n.I0)(),l=()=>o((0,c.GK)(a.id));return(0,_.jsxs)("div",{children:[e&&(0,_.jsx)("p",{className:v,children:"Failed to fetch data from the server"}),(0,_.jsx)("h2",{children:"Contacts"}),(0,_.jsx)("ul",{className:f,children:s.map((t=>(0,_.jsxs)("li",{className:j,children:[(0,_.jsxs)("div",{children:[(0,_.jsx)("p",{className:C,children:t.name}),(0,_.jsx)("p",{className:N,children:t.phone})]}),(0,_.jsx)("button",{className:b,type:"button",onClick:()=>l(),children:"Delete"})]},t.id)))})]})},g={app_container:"Contacts_app_container__DgDhB",firstHeading:"Contacts_firstHeading__KfJXq",secondHeading:"Contacts_secondHeading__Px0xm"},y=()=>{const t=(0,n.v9)(r.xU),e=(0,n.v9)(r.zh);return(0,_.jsxs)("main",{children:[(0,_.jsx)(s.ql,{children:(0,_.jsx)("title",{children:"Contacts"})}),t&&!e&&(0,_.jsx)(o.a,{}),(0,_.jsxs)("div",{className:g.appContainer,children:[(0,_.jsx)(m,{}),(0,_.jsx)(x,{}),(0,_.jsx)(F,{error:e})]})]})}}}]);
//# sourceMappingURL=322.bbefb7ff.chunk.js.map